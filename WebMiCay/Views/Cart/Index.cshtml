@model List<WebMiCay.Models.CartItem>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutHomeClient.cshtml";
}

<head>

    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">

    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">



    <!-- Customized Bootstrap Stylesheet -->
    <link href="~/Client/Cart/css/style.css" rel="stylesheet">
</head>

<body>

    <div class="container-fluid" style="margin-top: 80px; margin-bottom: 140px">
        <div class="row px-xl-5">
            <div class="col-lg-8 table-responsive mb-5">
                <table class="table table-light table-borderless table-hover text-center mb-0">
                    <thead class="thead-dark">
                        <tr>
                            <th>Sản phẩm</th>
                            <th>Giá</th>
                            <th>Số lượng</th>
                            <th>Tổng cộng</th>
                            <th>Xóa bỏ</th>
                        </tr>
                    </thead>
                    <tbody class="align-middle">
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td class="align-middle">
                                    <img src="~/Content/food_img/@item.AnhMon" alt="" style="width: 50px;"> @item.TenMon
                                </td>
                                <td class="align-middle">@item.GiaCa VNĐ</td>
                                <td class="align-middle">
                                    <div class="input-group quantity mx-auto" style="width: 100px;">
                                        <div class="input-group-btn">
                                            <button class="btn btn-sm btn-primary btn-minus">
                                                <i class="fa fa-minus"></i>
                                            </button>
                                        </div>
                                        <input type="text" class="form-control form-control-sm bg-secondary border-0 text-center quantity-input" value="0">
                                        <div class="input-group-btn">
                                            <button class="btn btn-sm btn-primary btn-plus">
                                                <i class="fa fa-plus"></i>
                                            </button>
                                        </div>
                                    </div>
                                </td>
                                <td class="align-middle">@(item.GiaCa * 1) VNĐ</td>
                                <td class="align-middle">
                                    <button class="btn btn-sm btn-danger btn-remove-from-cart" data-item-id="@item.MaMon"><i class="fa fa-times"></i></button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="col-lg-4">
                <h5 class="section-title position-relative text-uppercase mb-3"><span class="bg-secondary pr-3">Tóm tắt giỏ hàng</span></h5>
                <div class="bg-light p-30 mb-5">
                    <div class="pt-2">
                        <div id="totalAmount" class="d-flex justify-content-between mt-2">
                            <h5>Tổng cộng</h5>
                            <h5>@Model.Sum(item => item.GiaCa * 1) VNĐ</h5>
                        </div>
                        <a id="checkoutButton" class="btn btn-block btn-primary font-weight-bold my-3 py-3" href="/Cart/Checkout">Thanh toán</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <style>
        #checkoutButton.muted {
            opacity: 0.5; /* Điều chỉnh độ mờ tùy ý */
            pointer-events: none; /* Ngăn chặn sự kiện click */
        }
    </style>

    <!-- JavaScript Libraries -->
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js"></script>
    <script src="~/Client/Cart/js/easing.min.js"></script>
    <script src="~/Client/Cart/js/owl.carousel.min.js"></script>

    <!-- Contact Javascript File -->
    <script src="~/Client/Cart/js/jqBootstrapValidation.min.js"></script>
    <script src="~/Client/Cart/js/contact.js"></script>

    <!-- Template Javascript -->
    <script src="~/Client/Cart/js/main.js"></script>

    <!--Xử lý tăng, giảm số lượng và cập nhật số tiền theo đó-->
    <script>
        $(document).ready(function () {
            // Sự kiện khi ấn nút trừ
            $('.btn-minus').on('click', function () {
                var inputElement = $(this).closest('td').find('.quantity-input');
                var currentValue = parseInt(inputElement.val());

                if (currentValue >= 1) {
                    currentValue--;
                    inputElement.val(currentValue + 1);
                    updateCartItem($(this).closest('tr'));
                }

                // Gọi hàm kiểm tra sau khi giảm số lượng
                checkQuantityAndToggleCheckoutButton();
            });

            // Sự kiện khi ấn nút cộng
            $('.btn-plus').on('click', function () {
                var inputElement = $(this).closest('td').find('.quantity-input');
                var currentValue = parseInt(inputElement.val());

                currentValue++;
                inputElement.val(currentValue - 1);
                updateCartItem($(this).closest('tr'));

                // Gọi hàm kiểm tra sau khi tăng số lượng
                checkQuantityAndToggleCheckoutButton();
            });

            // Sự kiện khi ấn nút thanh toán
            $('#checkoutButton').on('click', function (e) {
                // Kiểm tra tổng số lượng, nếu không đồng ý thanh toán, không thực hiện hành động tiếp theo
                var totalQuantity = 0;
                $('.quantity-input').each(function () {
                    totalQuantity += parseInt($(this).val());
                });

                if (totalQuantity === 0 || !confirm("Bạn đồng ý thanh toán chứ?")) {
                    e.preventDefault(); // Ngăn chặn hành động mặc định của nút thanh toán
                }
            });

            // Hàm kiểm tra số lượng và làm mờ/nhìn thấy nút thanh toán
            function checkQuantityAndToggleCheckoutButton() {
                var totalQuantity = 0;
                $('.quantity-input').each(function () {
                    totalQuantity += parseInt($(this).val());
                });

                // Nếu tổng số lượng là 0, làm mờ nút thanh toán, ngược lại nhìn thấy nút thanh toán
                if (totalQuantity === 0) {
                    $('#checkoutButton').addClass('muted');
                } else {
                    $('#checkoutButton').removeClass('muted');
                }
            }

            // Gọi hàm kiểm tra khi trang được tải
            checkQuantityAndToggleCheckoutButton();

            // Hàm cập nhật giỏ hàng
            function updateCartItem(row) {
                var pricePerItem = parseFloat(row.find('.align-middle:eq(1)').text().replace(' VNĐ', ''));
                var quantity = parseInt(row.find('.quantity-input').val(), 10);
                var totalPrice = pricePerItem * quantity;

                // Cập nhật giá tiền món
                row.find('.align-middle:eq(3)').text(totalPrice.toFixed(0) + ' VNĐ');

                // Cập nhật tổng cộng
                updateTotal();

                // Cập nhật số lượng món trong session
                var MaMon = row.find('.btn-remove-from-cart').data('item-id');
                updateQuantityInSession(MaMon, quantity);

                console.log('Quantity of ' + MaMon + ': ' + quantity);
            }

            // Hàm cập nhật số lượng món trong session
            function updateQuantityInSession(MaMon, quantity) {
                $.ajax({
                    url: '/Cart/UpdateQuantity',
                    type: 'POST',
                    data: {
                        MaMon: MaMon,
                        SoLuongMon: quantity
                    }
                });
            }   

            // Hàm cập nhật tổng cộng
            function updateTotal() {
                var total = 0;
                $('tbody .align-middle:eq(3)').each(function () {
                    var valueText = $(this).text().trim().replace(' VNĐ', '');
                    var value = parseFloat(valueText);
                    if (!isNaN(value)) {
                        total += value;
                    }
                });

                // Cập nhật tổng cộng
                $('#totalAmount h5:last').text(total.toFixed(0) + ' VNĐ');
            }
        });
    </script>

    <!--Xử lý xóa món-->
    <script>
    $(document).ready(function () {
        // Bắt sự kiện click của nút Xóa
        $('.btn-remove-from-cart').click(function () {
            // Lấy itemId từ thuộc tính data-item-id
            var itemId = $(this).data('item-id');

            // Gửi yêu cầu POST đến action RemoveFromCart trong controller
            $.post('@Url.Action("RemoveFromCart", "Cart")', { itemId: itemId }, function (data) {
                location.reload(); // Cập nhật lại trang
            });
        });
    });
    </script>
</body>